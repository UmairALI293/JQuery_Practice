<!DOCTYPE html>
<!-- saved from url=(0052)http://127.0.0.1:5500/Circle%20Navigation/index.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Circle Navigation</title>
    <style>
        .container {
            text-align: center;
            margin: 30px;
            background-color: aliceblue;
            padding: 20px;
        }
        .Datecontainer {
            text-align: center;
            margin: 0px 50px 0px 50px;
            background-color: aliceblue;
            padding: 20px;
        }
        .circles {
            display: flex;
            justify-content: center;
        }

        .circle {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: 2px solid #000;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: auto;
            font-size: 20px;
        }
        .buttons {
            display: flex;
            justify-content: center;
        }
        .button {
            margin: auto;
            border-radius: 30px;
            color: white;
            background-color: blueviolet;
            padding: 15px;
            cursor: pointer;
        }
        .content {
            margin: 40px;
            font-size: 20px;
            justify-content: center;
        }
        .Datecontent {
            margin: 10px;
            padding: 10px;
            font-size: 20px;
            justify-content: center;
        }
        .StepDate {
            margin: 10px;
            padding: 10px;
            justify-content: center;
        }
        .StepDate1 {
            display: flex;
            justify-content: center;
        }
    </style>
    <script src="./Circle Navigation_files/jquery-3.6.0.min.js.download"></script>
</head>

<body onload="displayDate()">
    <div class="container">
        <div class="circles">
            <div class="circle" id="circle1" style="background-color: blueviolet;">1</div>
            <div class="circle" id="circle2">2</div>
            <div class="circle" id="circle3">3</div>
        </div>
        <div class="content" id="content">Step 1: Learn React ‚öõÔ∏è</div>
        <div class="buttons">
            <div class="button" id="prev" onclick="Prev()">Prev</div>
            <div class="button" id="reset" onclick="Reset()">Reset</div>
            <div class="button" id="next" onclick="Next()">Next</div>
        </div>
    </div>
    <br>
    <br>
    <div class="Datecontainer">
        <div class="StepDate1">
            <button class="StepDate" id="StepDate" onclick="StepDecrement()"><b>-</b></button>
            <div class="Datecontent"><b id="Stepcontent">Step: 4</b></div>
            <button class="StepDate" id="StepDate" onclick="Stepincrement()"><b>+</b></button>
        </div>

        <div class="StepDate1">
            <button class="StepDate" id="StepDate" onclick="CountDecrease()"><b>-</b></button>
            <div class="Datecontent"><b id="Datecontent">Count: 12</b></div>
            <button class="StepDate" id="StepDate" onclick="Countincrease()"><b>+</b></button>
        </div>
        <div style="justify-content: center;">
            <h2 id="dateDiv">Sat Jun 08 2024</h2>
            <p id="dateDiv1">Remedy tickly coughs with a drink of honey, lemon and water as hot as you can take.</p>
        </div>
        <button class="StepDate" id="StepDate" onclick="fetchadv()"><b>click me</b></button>
    </div>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>




<script>
    const messages = [
        "Step 1: Learn React ‚öõÔ∏è",
        "Step 2: Apply for jobs üíº",
        "Step 3: Invest your new income ü§ë",
    ];
    let counter = 1;
    let dateCount = 0;
    let StepCount = 1;
    let currentDate = new Date();
    document.getElementById("content").innerHTML = messages[0];

    function Next() {
        if (counter < messages.length) {
            counter++;
            updateContentAndColors();
        }
    }

    function Prev() {
        if (counter > 1) {
            counter--;
            updateContentAndColors();
        }
    }

    function Reset() {
        counter = 1;
        updateContentAndColors();
    }

    function updateContentAndColors() {
        document.getElementById("content").innerHTML = messages[counter - 1];
        for (let i = 1; i <= messages.length; i++) {
            document.getElementById(`circle${i}`).style.backgroundColor = (i === counter) ? "blueviolet" : "aliceblue";
        }
    }

    async function displayDate() {
        await fetchAdvice();

        var today = new Date();
        var date = today.toDateString();
        document.getElementById("dateDiv").innerHTML = date;
    }

    async function Countincrease() {
        try {
            await fetchAdvice();

            
            updateDateAndCount(StepCount);
        } catch (error) {
            console.error('Error updating date and count:', error);
        }
    }

    async function CountDecrease() {
        await fetchAdvice();

        updateDateAndCount(-StepCount);
    }

    function Stepincrement() {
        StepCount += 1;
        document.getElementById("Stepcontent").innerHTML = `Step: ${StepCount}`;
    }

    function StepDecrement() {
        if (StepCount > 1) {
            StepCount -= 1;
            document.getElementById("Stepcontent").innerHTML = `Step: ${StepCount}`;
        } else {
            StepCount = 1;
            document.getElementById("Stepcontent").innerHTML = `Step: ${StepCount}`;
        }
    }

    async function fetchAdvice() {
    try {
        const response = await fetch('https://api.adviceslip.com/advice');
        if (!response.ok) {
            throw new Error('Network response was not ok ' + response.statusText);
        }
        const data = await response.json();
        
        const advice = data.slip.advice;
        console.log(advice);
        $('#dateDiv1').text(advice);
    } catch (error) {
        console.error('Error fetching data:', error);
        $('#dateDiv1').text('Error fetching data.');
    }
}
    function updateDateAndCount(step) {
        currentDate.setDate(currentDate.getDate() + step);
        document.getElementById("dateDiv").innerHTML = currentDate.toDateString();
        dateCount += step;
        document.getElementById("Datecontent").innerHTML = `Count: ${dateCount}`;
    }


function fetchadv(){
    $.ajax({
                url: 'https://api.adviceslip.com/advice',
                method: 'GET',
                dataType: 'json',
                success: function(data) {
                    const advice = data.slip.advice;
                    console.log(advice);
                    $('#dateDiv1').text(advice);
                    resolve();
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching data:', error);
                    $('#dateDiv1').text('Error fetching data.');
                    reject(error);
                }
            });
}
   
</script>
</body></html>